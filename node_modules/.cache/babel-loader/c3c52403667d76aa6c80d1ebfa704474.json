{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dhingm\\\\Desktop\\\\stock-market-project\\\\src\\\\DataGrid\\\\stock-dg.js\";\nimport React from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"./styles.css\";\nimport axios from 'axios';\nvar columns = [{\n  key: \"01. symbol\",\n  name: \"Company\"\n}, {\n  key: \"02. open\",\n  name: \"Open\"\n}, {\n  key: \"03. high\",\n  name: \"High\"\n}, {\n  key: \"04. low\",\n  name: \"Low\"\n}, {\n  key: \"09. change\",\n  name: \"Change\"\n}];\nvar rows = [];\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props)); // this.getstockdata(this.props.list);\n\n    _this.state = {\n      rows: _this.props.list,\n      names: []\n    };\n\n    _this.onGridRowsUpdated = function (_ref) {\n      var fromRow = _ref.fromRow,\n          toRow = _ref.toRow,\n          updated = _ref.updated;\n\n      _this.setState(function (state) {\n        var rows = state.rows.slice();\n\n        for (var i = fromRow; i <= toRow; i++) {\n          rows[i] = _objectSpread({}, rows[i], updated);\n        }\n\n        return {\n          rows: rows\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"getstockdata\",\n    value: function getstockdata(listData) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ReactDataGrid, {\n        left: '10',\n        minHeight: \"73px\",\n        width: '94%',\n        columns: columns,\n        rowGetter: function rowGetter(i) {\n          return _this2.state.rows[i];\n        },\n        rowsCount: 8,\n        enableCellSelect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), this.setState(function (prevState) {\n        return {\n          rows: _this2.props.list\n        };\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport default Example;","map":{"version":3,"sources":["C:\\Users\\dhingm\\Desktop\\stock-market-project\\src\\DataGrid\\stock-dg.js"],"names":["React","ReactDataGrid","axios","columns","key","name","rows","Example","props","state","list","names","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","listData","display","prevState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,YAAP;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CADc,EAEd;AAAED,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAFc,EAGd;AAAED,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHc,EAId;AAACD,EAAAA,GAAG,EAAE,SAAN;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJc,EAKd;AAACD,EAAAA,GAAG,EAAE,YAAN;AAAoBC,EAAAA,IAAI,EAAE;AAA1B,CALc,CAAhB;AAQA,IAAMC,IAAI,GAAG,EAAb;;IAEMC,O;;;;;AAGJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN,GADc,CAEf;;AAFe,UAFlBC,KAEkB,GAFV;AAAEH,MAAAA,IAAI,EAAG,MAAKE,KAAL,CAAWE,IAApB;AACRC,MAAAA,KAAK,EAAE;AADC,KAEU;;AAAA,UAKlBC,iBALkB,GAKE,gBAAiC;AAAA,UAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,OAAc,QAAdA,OAAc;;AACnD,YAAKC,QAAL,CAAc,UAAAP,KAAK,EAAI;AACrB,YAAMH,IAAI,GAAGG,KAAK,CAACH,IAAN,CAAWW,KAAX,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAGL,OAAb,EAAsBK,CAAC,IAAIJ,KAA3B,EAAkCI,CAAC,EAAnC,EAAuC;AACrCZ,UAAAA,IAAI,CAACY,CAAD,CAAJ,qBAAeZ,IAAI,CAACY,CAAD,CAAnB,EAA2BH,OAA3B;AACD;;AACD,eAAO;AAAET,UAAAA,IAAI,EAAJA;AAAF,SAAP;AACD,OAND;AAOD,KAbiB;;AAAA;AAGjB;;;;iCAYYa,Q,EAAU,CACtB;;;6BAEQ;AAAA;;AACP,aACI;AAAK,QAAA,KAAK,EAAI;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,aAAD;AACE,QAAA,IAAI,EAAI,IADV;AAEE,QAAA,SAAS,EAAI,MAFf;AAGE,QAAA,KAAK,EAAI,KAHX;AAIE,QAAA,OAAO,EAAEjB,OAJX;AAKE,QAAA,SAAS,EAAE,mBAAAe,CAAC;AAAA,iBAAI,MAAI,CAACT,KAAL,CAAWH,IAAX,CAAgBY,CAAhB,CAAJ;AAAA,SALd;AAME,QAAA,SAAS,EAAE,CANb;AAOE,QAAA,gBAAgB,EAAE,IAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,EASC,KAAKF,QAAL,CAAc,UAAAK,SAAS;AAAA,eAAK;AACzBf,UAAAA,IAAI,EAAG,MAAI,CAACE,KAAL,CAAWE;AADO,SAAL;AAAA,OAAvB,CATD,CADJ;AAcD;;;;EApCmBV,KAAK,CAACsB,S;;AAuC5B,eAAef,OAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport \"./styles.css\";\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  { key: \"01. symbol\", name: \"Company\" },\r\n  { key: \"02. open\", name: \"Open\"},\r\n  { key: \"03. high\", name: \"High\"},\r\n  {key: \"04. low\", name: \"Low\"},\r\n  {key: \"09. change\", name: \"Change\"}\r\n];\r\n\r\nconst rows = [];\r\n\r\nclass Example extends React.Component {\r\n  state = { rows : this.props.list,\r\n  names :[] };\r\n  constructor(props){\r\n      super(props);\r\n     // this.getstockdata(this.props.list);\r\n  }\r\n\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n    this.setState(state => {\r\n      const rows = state.rows.slice();\r\n      for (let i = fromRow; i <= toRow; i++) {\r\n        rows[i] = { ...rows[i], ...updated };\r\n      }\r\n      return { rows };\r\n    });\r\n  };\r\n\r\n  getstockdata(listData) {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div style = {{display:\"flex\"}}>\r\n      <ReactDataGrid\r\n        left = {'10'}\r\n        minHeight = {\"73px\"}\r\n        width = {'94%'}\r\n        columns={columns}\r\n        rowGetter={i => this.state.rows[i]}\r\n        rowsCount={8}\r\n        enableCellSelect={true}\r\n      />{this.setState(prevState => ({\r\n            rows : this.props.list\r\n      }))}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}